apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "lab05.fullname" . }}
  labels:
    {{- include "lab05.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "lab05.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        secret.ini/checksum: {{ include "lab05.secret" . | sha256sum  }}
      labels:
        {{- include "lab05.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: prepare-base-dir
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          command:
            - /bin/bash
          args:
            - '-ec'
            - >
              #!/bin/bash


              . /opt/bitnami/scripts/liblog.sh

              . /opt/bitnami/scripts/libfs.sh


              info "Copying base dir to empty dir"

              # In order to not break the application functionality (such as
              upgrades or plugins) we need

              # to make the base directory writable, so we need to copy it to an
              empty dir volume

              cp -r --preserve=mode /opt/bitnami/drupal /emptydir/app-base-dir


              info "Copying symlinks to stdout/stderr"

              # We copy the logs folder because it has symlinks to stdout and stderr

              if ! is_dir_empty /opt/bitnami/apache/logs; then
                cp -r /opt/bitnami/apache/logs /emptydir/apache-logs-dir
              fi

              info "Copy operation completed"
          volumeMounts:
            - name: empty-dir
              mountPath: /emptydir
          imagePullPolicy: IfNotPresent
          securityContext:
            capabilities:
              drop:
                - ALL
            privileged: false
            seLinuxOptions: {}
            runAsUser: 1001
            runAsGroup: 1001
            runAsNonRoot: true
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
      containers:
        - name: drupal-sample
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: https
              containerPort: 8443
              protocol: TCP
          envFrom:
            - secretRef:
                name: '{{ include "lab05.name" . }}-secret'
          volumeMounts:
            - name: empty-dir
              mountPath: /opt/bitnami/apache/conf
              subPath: apache-conf-dir
            - name: empty-dir
              mountPath: /opt/bitnami/apache/logs
              subPath: apache-logs-dir
            - name: empty-dir
              mountPath: /opt/bitnami/apache/var/run
              subPath: apcahe-tmp-dir
            - name: empty-dir
              mountPath: /opt/bitnami/php/etc
              subPath: php-conf-dir
            - name: empty-dir
              mountPath: /opt/bitnami/php/tmp
              subPath: php-tmp-dir
            - name: empty-dir
              mountPath: /opt/bitnami/php/var
              subPath: php-var-dir
            - name: empty-dir
              mountPath: /tmp
              subPath: tmp-dir
            - name: empty-dir
              mountPath: /opt/bitnami/drupal
              subPath: app-base-dir
            - name: drupal-data
              mountPath: /bitnami/drupal
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          imagePullPolicy: IfNotPresent
          securityContext:
            capabilities:
              drop:
                - ALL
            privileged: false
            seLinuxOptions: {}
            runAsUser: 1001
            runAsGroup: 1001
            runAsNonRoot: true
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: Always
