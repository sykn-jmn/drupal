# Default values for lab05.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: 'docker.io/bitnami/drupal'
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: '10.2.6-debian-12-r1'

imagePullSecrets: []
nameOverride: ''
fullnameOverride: ''

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ''

podAnnotations: {}
podLabels: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ''
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /user/login
    port: http
  initialDelaySeconds: 600
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 5
  successThreshold: 1

readinessProbe:
  httpGet:
    path: /user/login
    port: http
  initialDelaySeconds: 30
  periodSeconds: 5
  timeoutSeconds: 1
  failureThreshold: 5
  successThreshold: 1

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes:
  - name: empty-dir
    emptyDir: {}
  - name: drupal-data
    persistentVolumeClaim:
      claimName: 'drupal-data-pvc'
# Additional volumeMounts on the output Deployment definition.
volumeMounts:
  - name: empty-dir
    mountPath: /opt/bitnami/apache/conf
    subPath: apache-conf-dir
  - name: empty-dir
    mountPath: /opt/bitnami/apache/logs
    subPath: apache-logs-dir
  - name: empty-dir
    mountPath: /opt/bitnami/apache/var/run
    subPath: apcahe-tmp-dir
  - name: empty-dir
    mountPath: /opt/bitnami/php/etc
    subPath: php-conf-dir
  - name: empty-dir
    mountPath: /opt/bitnami/php/tmp
    subPath: php-tmp-dir
  - name: empty-dir
    mountPath: /opt/bitnami/php/var
    subPath: php-var-dir
  - name: empty-dir
    mountPath: /tmp
    subPath: tmp-dir
  - name: empty-dir
    mountPath: /opt/bitnami/drupal
    subPath: app-base-dir
  - name: 'drupal-data'
    mountPath: '/bitnami/drupal'

nodeSelector: {}

tolerations: []

affinity: {}

mariadb:
  auth:
    rootPassword: 'randompassword'
    username: 'username'
    password: 'password'
    database: 'database'
